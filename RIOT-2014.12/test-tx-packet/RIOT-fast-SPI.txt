In the 'driver_cc2420.c' file from 'boards/z1',
add the following functions :


void cc2420_fasttx(uint8_t data)
{
    /* Wait for SPI to be ready for transmission */
    long count = 0;
    do {
        count++;
        if (count >= MAX_SPI_WAIT) {
            core_panic(0x2420, "cc2420_fasttx(): SPI never ready for TX!");
        }
    } while (!(IFG2 & UCB0TXIFG));
    /* Transmit data byte to CC2420 */
    UCB0TXBUF = data;
}
void cc2420_waitfortxend(void)
{
    long count = 0;
    do {
        count++;
        if (count >= MAX_SPI_WAIT) {
            core_panic(0x2420, "cc2420_waitfortxend(): SPI TX never ends!");
        }
    } while (UCB0STAT & UCBUSY);
}


... Similarly, in the 'driver_cc2420.c' file from 'boards/telosb',
add the following functions :


#define MAX_SPI_WAIT 1000000
void cc2420_fasttx(uint8_t data)
{
    /* Wait for SPI to be ready for transmission */
    long count = 0;
    do {
        count++;
        if (count >= MAX_SPI_WAIT) {
            core_panic(0x2420, "cc2420_fasttx(): SPI never ready for TX!");
        }
    } while (!(IFG1 & UTXIFG0));
    /* Transmit data byte to CC2420 */
    U0TXBUF = data;
}
void cc2420_waitfortxend(void)
{
    long count = 0;
    do {
        count++;
        if (count >= MAX_SPI_WAIT) {
            core_panic(0x2420, "cc2420_waitfortxend(): SPI TX never ends!");
        }
    } while (!(U0TCTL & TXEPT));
}


... Then, in the 'drivers/cc2420/cc2420_spi.c' file,
replace the cc2420_write_fifo() function with this version :


radio_packet_length_t cc2420_write_fifo(uint8_t* data, radio_packet_length_t data_length) {
    radio_packet_length_t i;
    unsigned int cpsr = disableIRQ();
    cc2420_spi_select();
    cc2420_fasttx(CC2420_REG_TXFIFO | CC2420_WRITE_ACCESS);
    for (i = 0; i < data_length; i++) {
        cc2420_fasttx(data[i]);
    }
    cc2420_waitfortxend();
    cc2420_spi_unselect();
    restoreIRQ(cpsr);
    return i;
}


